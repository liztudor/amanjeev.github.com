<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Amanjeev Sethi</title><link href="http://amanjeev.com/" rel="alternate"></link><link href="http://amanjeev.com/feeds/programming.atom.xml" rel="self"></link><id>http://amanjeev.com/</id><updated>2013-04-20T00:00:00-04:00</updated><entry><title>List of some Vim commands</title><link href="http://amanjeev.com/blog/list-of-some-vim-commands" rel="alternate"></link><updated>2013-04-20T00:00:00-04:00</updated><author><name>Amanjeev Sethi</name></author><id>tag:amanjeev.com,2013-04-20:blog/list-of-some-vim-commands</id><summary type="html">&lt;p&gt;Just a list, nothing special.&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Reformats the selected text according to the current indent rules&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
=
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Auto-indent current line&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
==
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;If you make a lot of edits, then undo them, then make one more edit, then decide you want the first set of edits back, most editors can't do it.  Emacs can, but it's a pain.  g- in Vim will usually take you straight there. This is not available in Vi.&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
g-
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Jump to the corresponding sibling item like open/close brackets - (), {}, []. Or HTML tags&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
%
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Center your screen on the current line&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
zz
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;In command mode, this goes to insert mode at the last place you were in the insert mode&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
gi
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Example, record with qa and replay with &amp;#64;a&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
Recording with : q&amp;lt;character&amp;gt;
Replay with    : &amp;#64;&amp;lt;character&amp;gt;
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;To reload the file you are currently editing. This helps when you are editing .gvimrc or .vimrc files in Vim and you want to reload the changes&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
:so %
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Vertical split and horizontal split window, respectively. A lot of combinations are available. They take a command to not duplicate the window by default and open the one you specify&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
:vsp
:sp
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;To make splitting more intuitive&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
set splitbelow
set splitright
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;To map moving between the buffer splits more intuitive with c-hjkl&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
nnoremap &amp;lt;C-J&amp;gt; &amp;lt;C-W&amp;gt;&amp;lt;C-J&amp;gt;
nnoremap &amp;lt;C-K&amp;gt; &amp;lt;C-W&amp;gt;&amp;lt;C-K&amp;gt;
nnoremap &amp;lt;C-L&amp;gt; &amp;lt;C-W&amp;gt;&amp;lt;C-L&amp;gt;
nnoremap &amp;lt;C-H&amp;gt; &amp;lt;C-W&amp;gt;&amp;lt;C-H&amp;gt;
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Max out the height of the current split&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
ctrl + w _
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Max out the width of the current split&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
ctrl + w |
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Normalize all split sizes, which is very handy when resizing terminal&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
ctrl + w =
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Swap top/bottom or left/right split&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
Ctrl+W R
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Break out current window into a new tabview&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
Ctrl+W T
&lt;/pre&gt;
&lt;/dd&gt;
&lt;dt&gt;Close every window in the current tabview but the current one&lt;/dt&gt;
&lt;dd&gt;&lt;pre class="first last literal-block"&gt;
Ctrl+W o
&lt;/pre&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;strong&gt;Some links&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/amanjeev/vim-setup/blob/master/.gvimrc"&gt;My .gvimrc file on Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/terryma/vim-multiple-cursors"&gt;Vim Multiple Cursors plugin like Sublime Text 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://robots.thoughtbot.com/post/48275867281/vim-splits-move-faster-and-more-naturally"&gt;Vim Splits - Move Faster and More Naturally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.vim.org/scripts/script.php?script_id=1658"&gt;NERDTree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Pelican + Foundation</title><link href="http://amanjeev.com/blog/pelican-foundation" rel="alternate"></link><updated>2013-02-24T00:00:00-05:00</updated><author><name>Amanjeev Sethi</name></author><id>tag:amanjeev.com,2013-02-24:blog/pelican-foundation</id><summary type="html">&lt;p&gt;Hello, World!&lt;/p&gt;
&lt;p&gt;This is an absolutely new site which is statically generated using &lt;a class="reference external" href="http://docs.getpelican.com/"&gt;Pelican&lt;/a&gt;. The framework used is &lt;a class="reference external" href="http://foundation.zurb.com/"&gt;Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pelican requires a theme which can be anything but I created a &lt;a class="reference external" href="https://github.com/amanjeev/foundation_pelican"&gt;theme from Foundation - [Github Repository]&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/amanjeev/amanjeev.com"&gt;here is the final source for amanjeev.com (this site)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The only trouble I had was that Pelican by default requires the home page to be a blog. That means, the home page is paginated. &lt;a class="reference external" href="https://github.com/getpelican/pelican/pull/623"&gt;There is a solution&lt;/a&gt; that makes it possible to have home page as a static page (reST or Markdown) and move your blog page to some other URL like /blog.html. I could have used it but I saw two opportunities in the code -&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;To have the home page still be a dynamic page with dynamic listing of the latest posts.&lt;/li&gt;
&lt;li&gt;To be able to specify all the new templates that you add as &lt;em&gt;paginated&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, I &lt;a class="reference external" href="https://github.com/amanjeev/pelican/commit/71ca51acc5d3ffe8e220b42a9280a614872fb03f"&gt;made some changes&lt;/a&gt; which are clearly not official and live on a &lt;a class="reference external" href="https://github.com/amanjeev/pelican/tree/nobloghome"&gt;separate branch&lt;/a&gt;. There is indeed a lot of discussion needed and the Gods of the project will know more than I do at this point.&lt;/p&gt;
&lt;p&gt;However, there is some discussion that has started on the archive pages. I clearly think that the archive pages need pagination and the default page limit value must be different than that of the normal pagination for the blog posts. Archives page has considerably less data so a default value of &lt;em&gt;DEFAULT_PAGINATION&lt;/em&gt;, which is usually around 5 to 10, does not work for it.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/getpelican/pelican/issues/735"&gt;Github issue&lt;/a&gt; in case you want to chime in.&lt;/p&gt;
</summary></entry><entry><title>Eclipse Encoding Pain</title><link href="http://amanjeev.com/blog/eclipse-encoding-pain" rel="alternate"></link><updated>2012-05-24T00:00:00-04:00</updated><author><name>Amanjeev Sethi</name></author><id>tag:amanjeev.com,2012-05-24:blog/eclipse-encoding-pain</id><summary type="html">&lt;p&gt;If you have used eclipse IDE and worked with Unicode character set then you know. I am looking at same workspace in eclipse with two files in Spanish language. One has garbage (question marks and diamonds, oh my) and the other is perfect Spanish.&lt;/p&gt;
&lt;p&gt;I have checked my settings and they are correctly pointing to UTF-8.&lt;/p&gt;
&lt;p&gt;Preferences -&amp;gt; General -&amp;gt; workspace&lt;/p&gt;
</summary></entry><entry><title>Ubuntu 10.04 – Android 2.2 – LG Optimus T – Application Development Setup</title><link href="http://amanjeev.com/blog/ubuntu-1004-android-22-lg-optimus-t-application-development-setup" rel="alternate"></link><updated>2012-05-01T00:00:00-04:00</updated><author><name>Amanjeev Sethi</name></author><id>tag:amanjeev.com,2012-05-01:blog/ubuntu-1004-android-22-lg-optimus-t-application-development-setup</id><summary type="html">&lt;p&gt;After a bunch of tries, I could figure out how to connect my LG Optimus T Android phone to my Ubuntu 10.04 development box so that I can launch and test applications directly to my phone.&lt;/p&gt;
&lt;p&gt;So, in the Android &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;platform-tools/&lt;/span&gt;&lt;/tt&gt; directory, we know that we have our famous and helpful &lt;tt class="docutils literal"&gt;adb&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;We will first connect our phone through USB cable and run the command ‘lsusb’. This will give us the listing, something like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;Using the information above, we create a file: ‘/etc/udev/rules.d/51-android.rules’ and paste the following in the file:&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;SUBSYSTEM==&amp;quot;usb&amp;quot;,&lt;/span&gt; &lt;span class="pre"&gt;SYSFS{idVendor}==&amp;quot;618e&amp;quot;,&lt;/span&gt; &lt;span class="pre"&gt;MODE=&amp;quot;0666&amp;quot;&lt;/span&gt;&lt;/tt&gt;
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;SUBSYSTEM==&amp;quot;usb&amp;quot;,&lt;/span&gt; &lt;span class="pre"&gt;SYSFS{idVendor}==&amp;quot;1004&amp;quot;,&lt;/span&gt; &lt;span class="pre"&gt;MODE=&amp;quot;0666&amp;quot;&lt;/span&gt;&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;Run the following commands:&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;adb &lt;span class="pre"&gt;kill-server&lt;/span&gt;&lt;/tt&gt;
&lt;tt class="docutils literal"&gt;adb devices&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;You may have to reconnect the device once for the system to read and you are done.&lt;/p&gt;
</summary></entry><entry><title>Android’s ACTION_CALL is restricted, duh!</title><link href="http://amanjeev.com/blog/androids-action_call-is-restricted-duh" rel="alternate"></link><updated>2011-02-16T00:00:00-05:00</updated><author><name>Amanjeev Sethi</name></author><id>tag:amanjeev.com,2011-02-16:blog/androids-action_call-is-restricted-duh</id><summary type="html">&lt;p&gt;I have an Android app called &lt;a class="reference external" href="https://github.com/amanjeev/callHelp"&gt;CallHelp (Call Help)&lt;/a&gt;. It is a simple application where you have a one large button which supposedly calls  911 (emergency number). Intention of the app is to have a quick way to call 911 by pressing the button and keeping it pressed till the time they do not want to call. Releasing the button will/should call 911.&lt;/p&gt;
&lt;p&gt;Problem with current implementation is that it does not automatically call 911. It just pulls up the dial screen with 911 number pre-filled. I was trying to figure out a way to make calls but I guess I cannot do it. This is because the Android Intent called &lt;a class="reference external" href="http://developer.android.com/reference/android/content/Intent.html#ACTION_CALL"&gt;ACTION_CALL&lt;/a&gt; is restricted to non-emergency number and I have to use &lt;a class="reference external" href="http://developer.android.com/reference/android/content/Intent.html#ACTION_DIAL"&gt;ACTION_DIAL&lt;/a&gt; for this.&lt;/p&gt;
&lt;p&gt;So, the fun part is that I cannot create my app the way I want to because it just won’t dial 911. After releasing the huge button in my app, you have to press “Call” on the next screen. This just fails my app’s core purpose.&lt;/p&gt;
&lt;p&gt;I think this app has a good usage. For example, someone moving through a dark alley might want to keep such a ‘setup’ ready in case something happens. You know, at least there will be a call to 911 (say, even if the phone drops etc.).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://amanjeev.com/a-very-simple-android-application-for-safety.html"&gt;Older post about this app&lt;/a&gt;.&lt;/p&gt;
</summary></entry><entry><title>SSH RSYNC Dreamhost Backup User</title><link href="http://amanjeev.com/blog/ssh-rsync-dreamhost-backup-user" rel="alternate"></link><updated>2010-08-08T00:00:00-04:00</updated><author><name>Amanjeev Sethi</name></author><id>tag:amanjeev.com,2010-08-08:blog/ssh-rsync-dreamhost-backup-user</id><summary type="html">&lt;p&gt;I hope this helps someone. I was trying to have rsync setup with Dreamhost’s 50GB free backup plan to backup my machine without having to type the password again and having to interfere with it.&lt;/p&gt;
&lt;p&gt;So, I did the following:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;I created the Backup User using the CPanel and once created, logged in using SFTP into the backup user account (it gives you a different account/username).&lt;/li&gt;
&lt;li&gt;I then created a directory named .ssh in the root of this new account (remember I am logged in sing SFTP)&lt;/li&gt;
&lt;li&gt;Put my &lt;tt class="docutils literal"&gt;id_rsa.pub&lt;/tt&gt; in this directory and renamed it to &lt;tt class="docutils literal"&gt;authorized_key&lt;/tt&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By now, I thought things were fine and fired the command:&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;rsync &lt;span class="pre"&gt;-e&lt;/span&gt; ssh &lt;span class="pre"&gt;-av&lt;/span&gt; &lt;span class="pre"&gt;&amp;#64;.dreamhost.com:~/&lt;/span&gt;&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;Please make sure that you do not generate SSH key with a passphrase and also have right permissions.  It needs 700 for the private key.&lt;/p&gt;
</summary></entry><entry><title>A Very Simple Android Application for Safety</title><link href="http://amanjeev.com/blog/a-very-simple-android-application-for-safety" rel="alternate"></link><updated>2009-12-16T00:00:00-05:00</updated><author><name>Amanjeev Sethi</name></author><id>tag:amanjeev.com,2009-12-16:blog/a-very-simple-android-application-for-safety</id><summary type="html">&lt;p&gt;I finally got to play with Android and I tried to make it useful enough. This application is not a big break-through or something 2.0-ish. Its a very simple call app but I am under this assumption that this will prove to be useful (at least it will be for me if I had an Android phone). Yes, I do not have Android phone and I do not even have an iPhone. I just happen to suck!&lt;/p&gt;
&lt;p&gt;The application is about Calling for help when you are walking through a dark or a possibly unsafe place. Hoping that you are getting phone signal, I have always wondered that instead of fidgeting with your phone to dial 911 and keeping your thumb on the “green call” button, why not have an application where there is a big fat button that when released calls 911. Thats what I have tried to do here in this application. A 200px button when pressed and held, does not do anything, but when released, dials 911. So, you can save yourself from a surprise event like someone attacking you from behind and leave the calling for the app to do.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.amanjeev.com/pg/callHelp30.apk"&gt;Here is the .apk file of the application&lt;/a&gt;. I call it callHelp application. I think its a good idea to improve this application to include a setting where you can change the emergency number (I’d suggest keep 911). Right now this feature is not there because I am not even sure if this application works on a handset.&lt;/p&gt;
&lt;p&gt;If you are interested in looking at the source code, you can do that here at Github. &lt;a class="reference external" href="https://github.com/amanjeev/CallHelp"&gt;Source code at Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, if someone out there tries it, please let me know how goes it! thanks.&lt;/p&gt;
</summary></entry></feed>